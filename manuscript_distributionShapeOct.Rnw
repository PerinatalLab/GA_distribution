\documentclass{article}

\begin{document}
\SweaveOpts{concordance=TRUE}

<< load cleaned data >>=
dt = readRDS("/Users/xmoddo/Documents/sshfs_gu_lab/manuscript_distirbutionShape/mfr_missingMaternalID_duplicatedMorChild_cleanParity_removedMultiplets_removedMissingGRDBS.RDS")
output = readRDS("/Users/xmoddo/Documents/sshfs_gu_lab/manuscript_distirbutionShape/mfr_missingMaternalID_duplicatedMorChild_cleanParity_removedMultiplets_removedMissingGRDBS_INCLUSIONsAMPLEsIZE.RDS")

library(dplyr)
library(lubridate) 
@

<< creating dataset >>=
mfr = readRDS("/Users/xmoddo/Documents/sshfs_gu_lab/sub_mfr_not_clean.RDS") # verena's dataset
mfr = readRDS("/Users/xmoddo/Documents/sshfs_gu_lab/sub_mfr14_ali_reliable.RDS") # ali's dataset

library(dplyr)
library(lubridate)

# load functions
source("/Users/xmoddo/Box Sync/project1 - intergenerational effect/9_SCRIPTS/project_intergenerational_effect/REGISTER_DATA_CLEANING/1_cleaning_modules.R")
source("/Users/xmoddo/Box Sync/project1 - intergenerational effect/9_SCRIPTS/project_intergenerational_effect/REGISTER_DATA_CLEANING/2_renumber_parity_to_parityF.R")

##### remove: missing maternal ID, duplicated mather_child ID, recalculate parity ----
names(mfr)

output = creating_output(mfr)
year_matrix = NULL
cleaning = function(dat){
  # generate_year_counts(dat, stage="initial", show=TRUE)
    colnames(dat)[grep("lpnr_MOR",colnames(dat))]  = "lpnr_mor"
    
  dat = fun_momID(dat)
  output = prep_for_groble(dat, "missing maternal ID")
  assign("output", output, envir = .GlobalEnv)
  
  colnames(dat)[grep("lpnr_barn",colnames(dat))]  = "lpnr_BARN"
  
  dat = fun_momkidID(dat) 
  output = prep_for_groble(dat, "duplicated mother-child ID") # (left rows with the most info about "AR", "GRDBS", "PARITET", "lpnr_BARN","lpnr_mor"
  assign("output", output, envir = .GlobalEnv)
  
  nnn = recalculateParity(dat, thr_d_low = 31, thr_d_upp = 200)
  mfr = cbind(dat, data.frame(parity_clean = nnn))
  output = prep_for_groble(mfr, "loosing cases due to cleaning the parity variable")
  assign("output", output, envir = .GlobalEnv)
  
  list(mfr, output)
}

output_list = cleaning(mfr)
dt = output_list[[1]]

#### remove: twins,tripplets etc -----
dt = fun_multipregs(dt) 
output = prep_for_groble(dt, "multiplets")

rm(mfr, output_list, year_matrix, output)

#### remove: missing GRDBS variable ----
dt = dt %>% filter(!is.na(GRDBS))
output = prep_for_groble(dt, "removed missing GRDBS values")

#### dead: missing child's ID -----

###### IMPORTANT!
# as later it will get messed up, give the unique number for the dead born neanonates: NA_rowNR
# you can't merge the files anymore based on child's ID

sum(is.na(dt$lpnr_BARN)) # 18 744

dt$lpnr_BARN[which(is.na(dt$lpnr_BARN))] = paste(dt$lpnr_BARN[which(is.na(dt$lpnr_BARN))], row.names(dt[which(is.na(dt$lpnr_BARN)), ]), sep = "_")

saveRDS(file = "/Users/xmoddo/Documents/sshfs_gu_lab/manuscript_distirbutionShape/mfr_missingMaternalID_duplicatedMorChild_cleanParity_removedMultiplets_removedMissingGRDBS.RDS" , dt)
saveRDS(file = "/Users/xmoddo/Documents/sshfs_gu_lab/manuscript_distirbutionShape/mfr_missingMaternalID_duplicatedMorChild_cleanParity_removedMultiplets_removedMissingGRDBS_INCLUSIONsAMPLEsIZE.RDS" , output)

saveRDS(file = "/Users/xmoddo/Documents/sshfs_gu_lab/manuscript_distirbutionShape/ali_mfr_missingMaternalID_duplicatedMorChild_cleanParity_removedMultiplets_removedMissingGRDBS.RDS" , dt)
saveRDS(file = "/Users/xmoddo/Documents/sshfs_gu_lab/manuscript_distirbutionShape/ali_mfr_missingMaternalID_duplicatedMorChild_cleanParity_removedMultiplets_removedMissingGRDBS_INCLUSIONsAMPLEsIZE.RDS" , output)


@

<< functions >>=

#### leap year -----
# for defining whether a year is a leap year
is.leapyear=function(year){
  # http://en.wikipedia.org/wiki/Leap_year
  return(((year %% 4 == 0) & (year %% 100 != 0)) | (year %% 400 == 0))
}

##### finding GA for specified percentiles -----
specify_percentiles = function(dat){
  pl = dat %>% group_by(AR) %>% summarise( 
    
    p0.1 = quantile(GRDBS, probs = 0.001), # 0,1% 
    p0.5 = quantile(GRDBS, probs = 0.005), # 0,5% 
    p1 = quantile(GRDBS, probs = 0.01), # 1%
    p2.5 = quantile(GRDBS, probs = 0.025), # 2.5%
    p5 = quantile(GRDBS, probs = 0.05), # 5%
    
    p10 =  quantile(GRDBS, probs = 0.1), # 10%
    # p20 =  quantile(GRDBS, probs = 0.2) ,
    p30 =   quantile(GRDBS, probs = 0.3) ,
    # p40 =  quantile(GRDBS, probs = 0.4) ,
    p50 =  quantile(GRDBS, probs = 0.5) ,
    # p60 =  quantile(GRDBS, probs = 0.6) ,
    p70 =  quantile(GRDBS, probs = 0.7) ,
    # p80 =  quantile(GRDBS, probs = 0.8) ,
    p90 =  quantile(GRDBS, probs = 0.9) , # 90%
    
    m = mean(GRDBS), 
     
    n = n()
  )
  return(pl)
}

##### function that plots the changes in percentiles -----
# If you want to plot results from different datasets, just set add_to_plot as TRUE
plot_lines = function(add_to_plot = F, specify_colour){
  
  if(add_to_plot==F){
    for(i in 1:length(pl_name)){
      points(pl$AR, pl[[ pl_name[i] ]], col = "black", type = "l", lwd = 3) 
    }
  }else{
    for(i in 1:length(pl_name)){
      points(pl$AR, pl[[ pl_name[i] ]], col = specify_colour, type = "l", lwd = 3, lty = 2) 
    }
  }
}

#### adding legend to the percentile-distirbution plot -----
add_prct_legend = function(where_placed_year){
  ys = as.vector(pl[which(pl$AR==2012), pl_name])
prc = unique(unlist(strsplit(pl_name, "p")))
prc = prc[! prc %in% ""]
prc = paste(prc, "%", sep = "")
text(x = where_placed_year, y = ys, labels = prc,  pos = 2 )
text(x = where_placed_year, y = c(ys["p50"], ys["p5"]), labels = c("50%", "5%"), lwd = 100,  pos = 2 ) # marking median value the same colour as line, pl$p50[which(pl$AR==2012)], col = c("blue", "red"),
# text(x = 2017, y = 295, labels = "percentiles:", pos = 2) # optional
# text(x = 2017, y = pl$m[which(pl$AR==2012)]-1, labels = "mean", pos = 2, col = "blue")

}

# function extracting the leap-years from the vector of years
leap_year_ind = function(years_to_check){
  a = years_to_check
  a[which(is.leapyear(years_to_check) == 1)]
}


@

<< defining some variables >>=

##### childtbirth surgery other than c-section ----
dt$FLOP_cat = 0
dt$FLOP_cat[which( dt$FLOP != ""  )] = 1 # had a childbirth surgery
table(dt$FLOP_cat, useNA = "a")
table(dt$TANGMARK, useNA = "a")
table(dt$SUGMARK, useNA = "a")

clc = apply(dt, MARGIN = 1, FUN =  function(x){
  sum(as.numeric(x[["TANGMARK"]]), as.numeric(x[["SUGMARK"]]), as.numeric(x[["FLOP_cat"]]), na.rm = T)
})

dt$child_birth_surgery = clc
prop.table(table(dt$child_birth_surgery))*100

dt$child_birth_surgery_cat = 0
dt$child_birth_surgery_cat[which(dt$child_birth_surgery != 0 )] = 1 # had a childbirth
table(dt$child_birth_surgery_cat)


##### iatrogenic start of delivery ----

# variables available in the MFR:
# birth started spontaneously: FLSPONT - registered since 90s
# birth started with induction_ FLINDUKT
# birth started by cesarean: SECFORE - registered since 90s
# elective (planned) / emergency c-section (that means spontanoues onset): ELEKAKUT
# c-section but coudl be spont or iatrog: SECAVSL or SECMARK

##### PART 1: based on data before 1987
# spontaneous delivery:
          # 650 (Partus, complicatione non indicata ), 
          # 652 (Partus complicatus e retentione placentae ), 
          # 657 (Partus protractus, primarius), 
          # 658 (Partus cum laceratione perinei, alia laceratione non indicata), 
          # 660.2 (Partus cum alio traumate obstetricio matris / Laceratio cervicis), 
          # 660.3 (Partus cum alio traumate obstetricio matris / Laceratio vaginae), 
          # 660.4 (Partus cum alio traumate obstetricio matris / Haematoma vulvae), 
          # 661.1 (PROM) --> checked with Jaroslav
# induced delivery: 
          # 651 (Partus complicatus e placenta praevia sive haemorrhagia ante partum ), 
          # 762.1 (Praeeclampsia, eclampsia et toxicosis NUD), 
          # 762.2 (Eclampsia in graviditate Sjukdom i 637,1 uppkommen under graviditeten), 
          # 637 (Praeeclampsia, eclampsia et toxicosis NUD), 
          # 661.4 (Hydramnion) --> checked with Jaroslav

b87 = dt %>% filter(AR<1987)

b87$mdiag_comb = paste(b87$MDIAG1, b87$MDIAG2, b87$MDIAG3, b87$MDIAG4, b87$MDIAG5, b87$MDIAG6, b87$MDIAG7, b87$MDIAG8, b87$MDIAG9, b87$MDIAG10, b87$MDIAG11, b87$MDIAG12, sep = "_" ) 
spont = c(grep("650", b87$mdiag_comb), grep("652", b87$mdiag_comb), grep("657", b87$mdiag_comb), grep("6602", b87$mdiag_comb), grep("658", b87$mdiag_comb),
          grep("6603", b87$mdiag_comb), grep("6611", b87$mdiag_comb) )
iatrog = c(grep("651", b87$mdiag_comb), grep("7621", b87$mdiag_comb), grep("7622", b87$mdiag_comb), grep("637", b87$mdiag_comb),  grep("6614", b87$mdiag_comb))

b87$iatrogenic = NA # 1 - yes, 0 - spontanoues
b87$iatrogenic[spont] = 0
b87$iatrogenic[iatrog] = 1
table(b87$iatrogenic, useNA = "a")

##### PART 2: based on data from 1990
# spontaneous: 650, 658 /PROM, try with the codes from icd8: 650, 652, 657, 660.2, 660.3, 660.4, 661.1
# inductions: try with those from the ICD8: 651, 762.1, 762.2, 637, 661.4

b97 = dt %>% filter(AR>1986 & AR < 1997)

b97$mdiag_comb = paste(b97$MDIAG1, b97$MDIAG2, b97$MDIAG3, b97$MDIAG4, b97$MDIAG5, b97$MDIAG6, b97$MDIAG7, b97$MDIAG8, b97$MDIAG9, b97$MDIAG10, b97$MDIAG11, b97$MDIAG12, sep = "_" ) 
spont = c(grep("650", b97$mdiag_comb), grep("652", b97$mdiag_comb), grep("657", b97$mdiag_comb), grep("6602", b97$mdiag_comb), grep("658", b97$mdiag_comb),
          grep("6603", b97$mdiag_comb), grep("6611", b97$mdiag_comb), which(b97$FLSPONT==1) )
iatrog = c(grep("651", b97$mdiag_comb), grep("7621", b97$mdiag_comb), grep("7622", b97$mdiag_comb), grep("637", b97$mdiag_comb),  
           grep("6614", b97$mdiag_comb), which(b97$FLINDUKT==1),  which(b97$SECFORE == 1) )

table(b97$FLINDUKT, b97$FLSPONT, useNA = "a")

b97$iatrogenic = NA # 1 - yes, 0 - spontanoues
b97$iatrogenic[spont  ] = 0
b97$iatrogenic[iatrog  ] = 1
table(b97$iatrogenic, useNA = "a")

##### PART 3: after 1997, icd-10, not sure about: O60.1 (Preterm labor with preterm delivery), O60.2, 
# spontanoues onset of delivery: 
              # o80 (Encounter for full-term uncomplicated delivery), 
              # o81 ( Encounter for cesarean delivery without indication), 
              # o84.0 (multiple, spont), o84.1 (multiple, forceps) , 
              # o75.6 (prom)
            # O42 (prom), 

# iatrodenic onset of delivery: 
              # o61 (Failed induction of labor), 
              # o62 (Abnormalities of forces of labor),
              # O60.3, 
              #  O75.5 Delayed delivery after artificial rupture of membranes

aft97 = dt %>% filter(AR>1996 )

aft97$mdiag_comb = paste(aft97$MDIAG1, aft97$MDIAG2, aft97$MDIAG3, aft97$MDIAG4, aft97$MDIAG5, aft97$MDIAG6, aft97$MDIAG7, aft97$MDIAG8, aft97$MDIAG9, aft97$MDIAG10, aft97$MDIAG11, aft97$MDIAG12, sep = "_" ) 
spont = c(grep("O80", aft97$mdiag_comb), grep("O81", aft97$mdiag_comb), grep("O840", aft97$mdiag_comb), grep("O841", aft97$mdiag_comb), grep("O756", aft97$mdiag_comb),
          grep("O601", aft97$mdiag_comb), grep("O602", aft97$mdiag_comb), grep("O42", aft97$mdiag_comb),grep("O756 ", aft97$mdiag_comb), which(aft97$FLSPONT==1) )
length(spont)
iatrog = c(grep("O61", aft97$mdiag_comb), grep("O62", aft97$mdiag_comb), grep("O603", aft97$mdiag_comb), grep("O755", aft97$mdiag_comb),  
            which(aft97$FLINDUKT==1) , which(aft97$SECFORE == 1), which(aft97$ELEKAKUT == 1) )

table(aft97$FLINDUKT, aft97$FLSPONT, useNA = "a")

aft97$iatrogenic = NA # 1 - yes, 0 - spontanoues
aft97$iatrogenic[spont  ] = 0
aft97$iatrogenic[iatrog  ] = 1
table(aft97$iatrogenic, useNA = "a")

dt = rbind(b87, b97, aft97)
rm(b87, b97, aft97, iatrog, spont)
table(dt$iatrogenic, useNA="a")
round(prop.table(table(dt$induced, useNA="a")), 2)

#### iatrogenic - type: c-sec / induced -----
# available differentatiation only for the years 1990-2012

dt1 = dt %>% filter(iatrogenic  == 1)

dt1$iatro_c_sec = 0
dt1$iatro_c_sec[which(dt1$SECFORE == 1  | dt1$ELEKAKUT == 1 | dt1$SECAVSL == 1, dt$SECMARK == 1)] = 1 # i didnt include other variable indicating the performance of c-section as the onset could be induced but there could be done c-section anyhow

dt1$iatro_induced = 0
dt1$iatro_induced[which(dt1$FLINDUKT == 1)] = 1

table(seced = dt1$iatro_c_sec, iatro_induced  = dt1$iatro_induced)
# czyli dodanie wszystkich mozliwych c-sec variables powiekszylo nam liczben c-sec - good, ale tez spowodowalo zmiejszenie induced- jesli wiemy ze one sa nieprawidlowo sklasyfikowane jak rowniez c-sec z powodu wlasnie dodania tych roznych zzmiennych, wiec zrobmy je all jako induced
dt1$iatro_c_sec[which(dt1$iatro_c_sec == 1 & dt1$iatro_induced == 1)] = 0

# spontenoues start of delivery but there was a c-section or childbirth surgery

#### c-section - planned or accute / induced or spontanoues -----
 clc2 = apply(dt, MARGIN = 1, FUN =  function(x){
  sum(as.numeric(x[["SECFORE"]]), as.numeric(x[["SECAVSL"]]), as.numeric(x[["SECMARK"]]), na.rm = T)
})
dt$c_sec = clc2
prop.table(table(dt$c_sec))*100

dt$c_sec_cat = 0
dt$c_sec_cat[which(dt$c_sec != 0 )] = 1
table(dt$c_sec_cat)

##### stillbirth -----
rows1 = c(grep("NA", dt$lpnr_BARN), which(is.na(dt$lpnr_BARN)))
rows2 = which(is.na(dt$DKLASS))
# rows3 = which(dt$DODFOD == 1)
incl = rows1[rows1 %in% rows2] # born dead - those who do not have ID and do not have provided day of death after delivery

dt$stillborn = 0
# dt$stillborn[ c(incl, which(dt$DKLASS == 1 )) ] = 1 # ONLY FOR ALI DATASET
dt$stillborn[ c(incl, which(dt$DKLASS == 1 | dt$DDAGAR == 0)) ] = 1 # or has NA_lnpr and not NA dklass
table(dt$stillborn, useNA = "a")
round(prop.table(table(dt$stillborn, useNA = "a")), 2)

table(dt$DKLASS)
table(dt$DDAGAR)

##### neonatal death = was born alive died within 28 days -----
dt$neo_death = 0
dt$neo_death[which(!is.na(dt$DDAGAR)  | dt$DKLASS== 2  |  dt$DKLASS ==3  )] = 1
dt$neo_death[which(dt$DDAGAR == 0)] = 0
table(dt$neo_death, useNA = "a")


dt$lmp_based = 0 # if the GA-estimate was based on the LMP 
dt$lmp_based[which(dt$GRMETOD %in% c(2,4,8,9,10))] = 1
table(dt$lmp_based, useNA = "a")

dt$ul_based = 0
dt$ul_based[which(dt$GRMETOD %in% c(1,5,6,7))] = 1

@

<< prevalence of iatrogenic c-seced / induced - Figure 8a >>=
dt1 = dt %>% filter(!is.na(iatrogenic)) # only among the births in which it was possible to define the iatro/spont
dt1$iatro_c_sec = 0
dt1$iatro_c_sec[which(dt1$SECFORE == 1  | dt1$ELEKAKUT == 1 | dt1$SECAVSL == 1, dt$SECMARK == 1)] = 1 # i didnt include other variable indicating the performance of c-section as the onset could be induced but there could be done c-section anyhow
dt1$iatro_induced = 0
dt1$iatro_induced[which(dt1$FLINDUKT == 1)] = 1

table(seced = dt1$iatro_c_sec, iatro_induced  = dt1$iatro_induced)
dt1$iatro_c_sec[which(dt1$iatro_c_sec == 1 & dt1$iatro_induced == 1)] = 0

# remoce stillbirths
dt1 = dt1 %>% filter(stillborn == 0)

names(dt1)
dim(dt1)

check = dt1 %>% group_by(AR) %>% summarise(prc_csec = sum(iatro_c_sec==1)/ sum(iatrogenic==1), # the proportion of c-sec among the iatrogenic births
                                           prc_ind  = sum(iatro_induced==1)/sum(iatrogenic==1), # the proportion of induction among the iatrogenic births
                                           ptc_iatro = sum(iatrogenic==1) /n()*100
                                           )
check$plot_ind = check$prc_ind*check$ptc_iatro
check$plot_csec = check$prc_csec*check$ptc_iatro
  
par(mar = c(1,5,1,1))
plot(NA, NA, xlim = c(1990, 2012), ylim = c(0, 35), cex.axis = 2, yaxt = "n", xaxt = "n", xlab = "", ylab = "")
axis(side = 2, las = 2, cex.axis = 2)
segments(1990:2012, 0, 1990:2012, 35, lty = 2, col = "grey")
segments( 1990,seq(0, 35, by = 5), 2012, seq(0, 35, by = 5), lty = 2, col = "grey")
points(check$AR, check$ptc_iatro, pch = 0, lwd = 3)
segments(check$AR, 0, check$AR, check$plot_csec, lwd = 3)
segments(check$AR, check$plot_csec, check$AR, check$ptc_iatro, lwd = 3, lty = 2)
points(check$AR, check$plot_csec, pch = 19)
# points(check$AR, check$plot_ind, pch = 1, lwd = 3)

legend(x = 1990, y  = 40, legend = c("iatrogenic deliveries", "cesarean-sections"), ncol = 2, 
       pch = c(0, 19), text.width = c(6,6), bty = "n", xpd = T )

# legend(x = 1991, y  = 0.04, legend = c("total iatrogenic deliveries", "c-sections from all other types", "induced from all other types"), ncol = 3, 
#        pch = c(0, 19, 1), text.width = c(4, 6, 6), bty = "n" )

dt2 = dt1 %>% filter(iatro_c_sec  == 1)
boxplot(GRDBS~AR, data = dt2, outline = F)

dt2 = dt1 %>% filter(iatro_induced  == 1)
boxplot(GRDBS~AR, data = dt2, outline = F)

# total number of iatrogenic increased significantly in 1997


@

<< GA-distirbution shape accross the years - Figure 1, FIgure 8b, Figure 5 >>=

##### overall sample, Figure 1 ----
# remove stillbirths
dt1 = dt %>% filter(stillborn == 0)
pl = specify_percentiles(dt1); pl_name = names(pl)[which(!names(pl) %in% c("AR", "m"))]

par(mar = c(3,5,2,2), cex = 1.5)
plot(NA, NA, xlim = c(1973, 2017), ylim = c(210, 300), xlab = "", ylab = "", yaxt = "n", cex.axis = 2) #  xlab = "year ", ylab = "gestational age [days] "
axis(2, las = 2, cex.axis = 2) # axis(2, las = 2, labels = seq(210, 300, by = 10), at = seq(210, 300, by = 10))
# adding background net
segments(1973, seq(150, 325, by = 10), 2012, seq(150, 325, by = 10), lty = 2, col = "grey")
segments(seq(1973, 2012, by = 1), 145, seq(1973, 2012, by = 1), 330, lty = 2, col = "grey")
# mark leap years
lpyr= leap_year_ind(1973:2012)
abline(v = lpyr, lty = 2, lwd = 2, col = "#204060")

plot_lines()
lines(pl$AR, pl$p50, col = "white", lwd = 2, lty = 5) # to distinguish median value
lines(pl$AR, pl$m, col = "black", lwd = 3, lty = 3) # to distinguish mean value
lines(pl$AR, pl$p5, col = "white", lwd = 3, lty = 2 )  # to distinguish 5th percentile
add_prct_legend(2016)

jpeg(filename = "~/Documents/try.jpeg",
     width = 17, height = 15, units = "mm",  res = 1200)

#### iatrogenic c-sections vs induced, years 1990 - 2012, Figure 8b ----

# creating, explained the previous code-chunk
dt1 = dt %>% filter(iatrogenic  == 1, stillborn == 0)
dt1$iatro_c_sec = 0
dt1$iatro_c_sec[which(dt1$SECFORE == 1  | dt1$ELEKAKUT == 1 | dt1$SECAVSL == 1, dt$SECMARK == 1)] = 1 # i didnt include other variable indicating the performance of c-section as the onset could be induced but there could be done c-section anyhow
dt1$iatro_induced = 0
dt1$iatro_induced[which(dt1$FLINDUKT == 1)] = 1
table(seced = dt1$iatro_c_sec, iatro_induced  = dt1$iatro_induced)
dt1$iatro_c_sec[which(dt1$iatro_c_sec == 1 & dt1$iatro_induced == 1)] = 0

dt2 =  dt1 %>% filter(iatro_c_sec==1, stillborn == 0)
pl = specify_percentiles(dt2); pl_name = names(pl)[which(!names(pl) %in% c("AR", "m"))]
par(mar = c(3,5,2,1), cex = 1.5)
plot(NA, NA, xlim = c(1990, 2012), ylim = c(160, 300), xlab = "", ylab = "", xaxt = "n", yaxt = "n", cex.axis = 2) #  xlab = "year ", ylab = "gestational age [days] "
axis(2, las = 2, cex.axis = 2) # axis(2, las = 2, labels = seq(210, 300, by = 10), at = seq(210, 300, by = 10))
# adding background net
axis(1, cex.axis = 2, at = seq(1990, 2012, by = 5))
y1 = seq(150, 325, by = 10)
x1 =  seq(1973, 2012, by = 1)
segments(1973, y1, 2012, y1, lty = 2, col = "grey")
segments(x1, 145, x1, 330, lty = 2, col = "grey")
plot_lines()

dt2 =  dt1 %>% filter(iatro_induced==1, stillborn == 0)
pl = specify_percentiles(dt2); pl_name = names(pl)[which(!names(pl) %in% c("AR", "m"))]
plot_lines(add_to_plot = T, specify_colour = "black")
legend(x = 1990, y = 320, legend = c("cesarean section", "induction"),  lty = c(1,2), lwd = 3, text.width = c(3,5), ncol = 2, bty = "n", xpd = T)

#### making a plot with the changes in the percentiles, spontanoues vs iatrogenic, Figure 5 ----
dt1 = dt %>% filter(iatrogenic == 1, GRMETOD %in% c(1, 5, 6, 7), AR %in% 1990:2012, stillborn  ==  0 ) # ul
check = dt1 %>% group_by(AR) %>% summarise(n = n())
plot(check$AR, check$n)

pl = specify_percentiles(dt1); pl_name = names(pl)[which(!names(pl) %in% c("AR", "m"))]
par(mar = c(3,5,2,1), cex = 1.5)
plot(NA, NA, xlim = c(1990, 2014), ylim = c(150, 300), xlab = "", ylab = "", yaxt = "n", xaxt = "n", cex.axis = 2) #  xlab = "year ", ylab = "gestational age [days] "
axis(2, las = 2, cex.axis = 2) # axis(2, las = 2, labels = seq(210, 300, by = 10), at = seq(210, 300, by = 10))
# adding background net
axis(side = 1, cex.axis = 2, at = seq(1990, 2012, by = 5))
y1 = seq(150, 325, by = 10)
x1 =  seq(1973, 2012, by = 1)
segments(1973, y1, 2012, y1, lty = 2, col = "grey")
segments(x1, 145, x1, 330, lty = 2, col = "grey")
plot_lines()
add_prct_legend(2014)

dt2 = dt %>% filter(iatrogenic == 0, GRMETOD %in% c(2, 4, 8, 9, 10), AR %in% 1990:2012 ) # spont lmp
### adding the lines to the plot - figure 9 (new 8)
pl = specify_percentiles(dt2); pl_name = names(pl)[which(!names(pl) %in% c("AR", "m"))]
plot_lines(add_to_plot = T, specify_colour = "red")

dt3 = dt %>% filter(iatrogenic == 0, GRMETOD %in% c(1, 5, 6, 7) , AR %in% 1990:2012 ) # spont, ul
pl = specify_percentiles(dt3); pl_name = names(pl)[which(!names(pl) %in% c("AR", "m"))]
plot_lines(add_to_plot = T, specify_colour = "blue")

legend(x = 1988, y = 320, xp = T, legend = c("iatrogenic", "spontaneous, ultrasound-based", "spontaneous, LMP-based"), bty = "n", # IATROGENIC IS ULTRASOUND BASED!
       col = c("black", "blue", "red"), lty = c(1, 2, 2), lwd = 2, ncol = 3, text.width = c(5,3,6) )


##### check if there is significant difference in the % of PTD ----
dt = mfr %>% filter(AR %in% c(1973:1980, 2000:2012))
dt$ptd = dt$GRDBS<37*7
dt$yr = "early"
dt$yr[which(dt$AR %in% 2000:2012)] = "late"
prop.table(table(dt$ptd, dt$yr), margin = 2)
chisq.test(dt$ptd, dt$yr) # variable PTD and year are dependent
dt$post = dt$GRDBS>42*7
chisq.test(dt$post, dt$yr) # variable PTD and year are dependent


sum(dt$ptd[which(dt$yr=="early")]) 

dt$ptd240 = dt$GRDBS<240
prop.table(table(dt$ptd240, dt$yr), margin = 2)
chisq.test(dt$ptd240, dt$yr) # variable PTD and year are dependent

dt$ptd220 = dt$GRDBS<220
prop.table(table(dt$ptd220, dt$yr), margin = 2)
chisq.test(dt$ptd220, dt$yr) # variable PTD and year are dependent

sum(mfr$GRDBS[which(mfr$AR %in% 1983:1988)]<37*7) / nrow(mfr[which(mfr$AR %in% 1983:1988), ])


@

<< changes in % of PTD and post-terms across the years, Figure 2 >>=

##### percentage of ptd over the years -----
mfr = dt %>% filter(stillborn == 0)
check = mfr %>% group_by(AR) %>% summarise(ptd = sum(GRDBS<37*7)/n() )

par(mar = c(4,6,1,1))
plot(NA, NA, xlim = c(1973, 2012), ylim = c(4.2, 5.6), xlab = "", ylab = "", yaxt = "n", cex.axis = 2) #  xlab = "year ", ylab = "gestational age [days] "
axis(2, las = 2, cex.axis = 2, at = seq(4, 5.6, by = 0.5)) # axis(2, las = 2, labels = seq(210, 300, by = 10), at = seq(210, 300, by = 10))

# adding background net
y1 = seq(4, 5.6, by = 0.5)
x1 =  seq(1973, 2012, by = 1)
segments(1973, y1, 2012, y1, lty = 2, col = "grey")
segments(x1, 4, x1, 6, lty = 2, col = "grey")
lpyr= leap_year_ind(1973:2012)
abline(v = lpyr, lty = 2, lwd = 2, col = "#204060")

points(check$AR, (check$ptd)*100, pch = 19)
points(check$AR[which(check$AR %in% lpyr)], (check$ptd[which(check$AR %in% lpyr)])*100, pch = 19, col = "red")
points(check$AR[which(check$AR %in% c(1981, 1989))], (check$ptd[which(check$AR %in% c(1981, 1989))])*100, pch = 1, cex = 2)

# PTD frequency over the periods ----
mfr$ptd_periods = cut(mfr$AR, breaks = c(1970, 1980, 1981,  1988, 1989,  1992, 2004, 2012))
table(mfr$ptd_periods )

check = mfr %>% group_by(ptd_periods) %>% summarise(ptd =( sum(GRDBS<37*7)/n() )*100)
segments(1973, check$ptd[1], 1980, check$ptd[1], lwd = 2)
segments(1982, check$ptd[3], 1988, check$ptd[3], lwd = 2)
segments(1989, check$ptd[5], 1992, check$ptd[5], lwd = 2)
segments(1992, check$ptd[6], 2004, check$ptd[6], lwd = 2)
segments(2004, check$ptd[7], 2012, check$ptd[7], lwd = 2)

round(check$ptd[c(1,3,5:7)], 3) # check the % of PTD in the selected periods
sum(mfr$GRDBS<37*7)/nrow(mfr) # check the overal PTD %


##### percentage of post-terms over the years -----
check = mfr %>% group_by(AR) %>% summarise(ptd = sum(GRDBS>42*7)/n() )

par(mar = c(1,4,1,1))
plot(NA, NA, xlim = c(1973, 2012), ylim = c(4.5, 13), xlab = "", ylab = "", xaxt = "n", yaxt = "n", cex.axis = 2) #  xlab = "year ", ylab = "gestational age [days] "
axis(2, las = 2, cex.axis = 2) # axis(2, las = 2, labels = seq(210, 300, by = 10), at = seq(210, 300, by = 10))
# adding background net
y1 = seq(4, 13, by = 1)
x1 =  seq(1973, 2012, by = 1)
segments(1973, y1, 2012, y1, lty = 2, col = "grey")
segments(x1, 4, x1, 13, lty = 2, col = "grey")
abline(v = lpyr, lty = 2, lwd = 2, col = "#204060")
lpyr= leap_year_ind(1973:2012)
abline(v = lpyr, lty = 2, lwd = 2, col = "#204060")

points(check$AR, (check$ptd)*100, pch = 19)
points(check$AR[which(check$AR %in% lpyr)], (check$ptd[which(check$AR %in% lpyr)])*100, pch = 19, col = "red")



@

<< changes in the % in particular GA-values, Figure 6 >>=

mfr = dt %>% filter(stillborn == 0)
check = mfr %>% group_by(AR) %>% summarise( p259 = sum(GRDBS == 259) /n() *100,
                                            p279 = sum(GRDBS == 279) /n() *100,
                                            p280 = sum(GRDBS == 280) /n() *100,
                                            p281 = sum(GRDBS == 281) /n() *100,
                                            p282 = sum(GRDBS == 282) /n() *100,
                                            p283 = sum(GRDBS == 283) /n() *100,
                                            p284 = sum(GRDBS == 284) /n() *100,
                                            
                                            pothers =( sum( GRDBS %in% 279:282) /n() *100)/4
                                            )

plot(NA, NA, xlim = c(1973, 2012), ylim = c(3,8.5), ylab = "", xlab = "", cex.axis = 2, yaxt = "n")
segments(1973, 3:9, 2012, 3:9, lty = 2, col = "grey")
segments(1973:2012, 3, 1973:2012, 9, lty = 2, col = "grey")
axis(side = 2, las = 2, at = 3:9, cex.axis = 2)
points(check$AR, check$p283, type = "b", pch = 19)
points(check$AR, check$pothers, type = "b", pch = 1)
legend(x = 1973, y = 9.3, bty = "n", pch = c(19, 1), legend = c("283", "average of 279-282"), xpd = T, ncol = 2, text.width = c(3,4))


# extras:
points(check$AR, check$p279, type = "b", ylim = c(3, 8))
points(check$AR, check$p280, type = "b", col = "brown", lwd = 2)
points(check$AR, check$p281, type = "b", col = "dark green", lwd = 2)
points(check$AR, check$p282, type = "b", col = "pink", lwd = 2)
points(check$AR, check$p283, type = "b", col = "purple", lwd = 2)
points(check$AR, check$p284, type = "b", col = "green", lwd = 2)
legend(x = 2000, y = 8, col = c("black", "red", "dark green", "pink", "purple"), lwd = 2, pch = 1, legend = c("279", "280", "281", "282", "283"))

plot(check$AR, check$p259, type = "b", lwd = 3, ylab = "%")
segments(1973:2012, 0, 1973:2012, 1, lty = 2, col = "grey")
lp = leap_year_ind(1973:2012)
abline(v = lp, lty = 2)

@

<< mean-GA and estimation method, Figure 4 >>=

dt$lmp_based = 0 # if the GA-estimate was based on the LMP 
dt$lmp_based[which(dt$GRMETOD %in% c(2,4,8,9,10))] = 1
table(dt$lmp_based, useNA = "a")

dt$ul_based = 0
dt$ul_based[which(dt$GRMETOD %in% c(1,5,6,7))] = 1

dt1 = dt %>% filter(lmp_based == 1, stillborn == 0)
dim(dt1)
check = dt1 %>% group_by(AR) %>% summarise(m = mean(GRDBS), md = median(GRDBS), n = n() )
plot(check$AR, check$n)
abline(h = 10000)

dt1 = dt %>% filter(ul_based == 1, stillborn == 0)
dim(dt1)
check2 = dt1 %>% group_by(AR) %>% summarise(m = mean(GRDBS), md = median(GRDBS), n = n() ) 
plot(check2$AR, check2$n)


min(c(check$m, check2$m))
plot(NA, NA, xlim = c(1973, 2012), ylim = c(275, 283), xlab = "", ylab = "", cex.axis = 2, yaxt = "n")
segments(1973:2012, 275, 1973:2012, 283, lty = 2, col = "grey")
segments(1973, 275:283, 2012, 275:283, lty = 2, col = "grey")
axis(side = 2, las = 2, cex.axis = 2, at = seq(275, 283, by = 2))
# mean value
points(check$AR, check$m, pch = 19)
points(check2$AR, check2$m, pch = 1, lwd = 3)
legend(x = 1973, y = 284.2,legend = c("LMP-based", "ultrasound-based"), pch = c(19, 1),  bty = "n", text.width = c(5, 5), ncol = 2, xpd = T)

#### slope 
draw_slope = function(dt1, yrs){
mod = lm(GRDBS~AR, data = dt1)
segments(min(yrs), coef(mod)[1] + coef(mod)[2]*min(yrs), max(yrs), coef(mod)[1] + coef(mod)[2]*max(yrs), lwd = 3)
if(coef(summary(mod))[2, 4] <0.5){
  text(min(yrs), coef(mod)[1] + coef(mod)[2]*min(yrs) + 0.5, labels = paste( "*", round(coef(mod)[2], 2), sep = "") )
}else{
  text(min(yrs), coef(mod)[1] + coef(mod)[2]*min(yrs) + 0.5, labels = round(coef(mod)[2], 2) )
}
list(beta = coef(mod)[2],
ci_low = confint(mod)[2,1],
ci_up = confint(mod)[2,2])
}

dt1 = dt %>% filter(AR %in% 1982:1993, ul_based == 1, stillborn ==0)
draw_slope(dt1, 1982:1993)
dt1 = dt %>% filter(AR %in% 1993:2012, ul_based == 1, stillborn == 0)
draw_slope(dt1, 1993:2012)
mean(dt1$GRDBS)

dt1 = dt %>% filter(AR %in% 1982:1993, lmp_based == 1,  stillborn == 0)
draw_slope(dt1, 1982:1993)
dt1 = dt %>% filter(AR %in% 1993:2012, lmp_based == 1,  stillborn == 0)
draw_slope(dt1, 1993:2012)

# median value
points(check$AR, check$md, pch = 19)
points(check2$AR, check2$md, pch = 1, lwd = 3)


@

<<estimation methods: Figure 3 >>=

dt$lmp_based = 0 # if the GA-estimate was based on the LMP 
dt$lmp_based[which(dt$GRMETOD %in% c(2,4,8,9,10))] = 1
table(dt$lmp_based, useNA = "a")

dt$ul_based = 0
dt$ul_based[which(dt$GRMETOD %in% c(1,5,6,7))] = 1

dt1 = dt %>% filter(!is.na(GRMETOD)) # restrict to the births which have GRMETOD available

dt1 = dt1 %>% filter(stillborn == 0)

check = dt1 %>% group_by(AR) %>% summarise(lmp = sum(lmp_based)/n()*100,
                                           ul = sum(ul_based)/n()*100,
                                           ped = sum(GRMETOD==3)/n()*100
                                           )
dim(dt1)

max(c(check$lmp, check$ul))
par(mar = c(4,4,2,1))
plot(NA, NA, xlim = c(1973, 2012), ylim = c(0,100), xlab = "", ylab = "", yaxt = "n", cex.axis = 2)
axis(side = 2, las = 2, cex.axis = 2)
segments(1973:2012, 0, 1973:2012, 100, lty = 2, col = "grey")
segments(1973, seq(0, 100, by = 10), 2012, seq(0,100, by = 10), lty = 2, col = "grey")
points(check$AR, check$lmp, pch = 19)
points(check$AR, check$ul, pch = 1, lwd = 3)
points(check$AR, check$ped, pch = 8, lwd = 3)


legend(x = 1973, y = 115,legend = c("pediatric record", "LMP-based", "ultrasound-based"), pch = c(8, 19, 1),  bty = "n", text.width = c(6,7,6), ncol = 3, xpd = T)
@

<< leap-years effect, Figure 7, Figure S1 >>=
mfr = dt %>% filter(stillborn == 0)

table(nchar(mfr$BPSMDAT))
table(nchar(mfr$SMDAT))

mfr = mfr %>% filter(nchar(BPSMDAT)==8)
mfr = mfr %>% filter(nchar(SMDAT)==8)

##### general LP effect -----
mfr$exp_ga_lmp  = as.numeric(ymd(mfr$BPSMDAT) - ymd(mfr$SMDAT)) # 46004 failes to parse, due to missing BPSMDAT: mfr = mfr[order(mfr$exp_ga_lmp), ]; tail(mfr)

check = mfr %>% group_by(AR) %>% summarise(mn_add = mean(exp_ga_lmp, na.rm = T), # mean added value to the LMP date
                                          md_add = median(exp_ga_lmp, na.rm = T), # median added value to the LMP date
                                          mn_ga = mean(GRDBS, na.rm = T) # mean GA based on best available estimate
                                          )

par(mar = c(3,5.5,1,1))
plot(NA, NA, pch = 19, yaxt = "n", xaxt = "n",
     ylab = "", cex = 2, xlab = "", ylim=c(278.5, 281.5), xlim = c(1980, 2012))
segments(1970, seq(277, 282, by = 1), 2012, seq(277, 282, by = 1), lty = 2, col = "grey")
segments(seq(1970, 2012, by = 1), 276, seq(1970, 2012, by = 1), 283, lty = 2, col = "grey")
abline(v = lpyr, lty = 2, lwd = 1)
points(check$AR, check$md_add, pch = 19, yaxt = "n", xaxt = "n", ylab = "", cex = 2, xlab = "", ylim=c(277, 282))
axis(side = 2, las = 2, cex.axis = 2)
axis(side = 1, cex.axis =2, at = seq(1970, 2012, by = 10), labels = seq(1970, 2012, by = 10))
# points(type = "b", check$AR, check$mn_ga, cex = 2, col = "black") # mean GA
points(check$AR[which(check$AR %in% lpyr)], check$md_add[which(check$AR %in% lpyr)], pch = 19, col = "red",  cex = 2)


##### lep-year effect - months, Figure 7 ----
mfr$exp_ga_lmp  = as.numeric(ymd(mfr$BPSMDAT) - ymd(mfr$SMDAT)) # 46004 failes to parse, due to missing BPSMDAT: mfr = mfr[order(mfr$exp_ga_lmp), ]; tail(mfr)
mfr = mfr %>% filter(exp_ga_lmp %in% 154:350)
summary(mfr$exp_ga_lmp)

# extract the month SMDAT
mfr$SMDAT_month = month(ymd(mfr$SMDAT))
mfr$SMDAT_year = year(ymd(mfr$SMDAT))
mfr$SMDAT_day = day(ymd(mfr$SMDAT))
mfr$SMDAT_week = week(ymd(mfr$SMDAT))

mfr$BPULDAT_month = month(ymd(mfr$BPULDAT))
mfr$BPULDAT_yr = year(ymd(mfr$BPULDAT))

#### plot based on months
# Figure Median added value to the last menstrual period when predicting a due-date.

check1 = mfr %>% group_by(BPULDAT_yr, BPULDAT_month) %>% summarise(mn_add = mean(exp_ga_lmp, na.rm = T), # mean added value to the LMP date
                                                                           md_add = median(exp_ga_lmp, na.rm = T), # median added value to the LMP date
                                                                           mn_ga = mean(GRDBS, na.rm = T), # mean GA based on best available estimate
                                                                   mode_ga = sort(table(exp_ga_lmp),decreasing=TRUE)[1]
                                                                   )

# circle plot
deg2rad <- function(deg) {(deg * pi) / (180)} # transforming degrees into radians

check = check1 %>% filter(BPULDAT_yr %in% 1983:2012) # I just picked the years to get 360 months in total
check$yr_ms = paste(check$BPULDAT_yr, check$BPULDAT_month, sep = "_") # merged years and months
# check$radius = as.numeric(check$mode_ga - 278)
check$radius = as.numeric(check$md_add - 278) # I defined radius as 1 for the median value == 279, radius 2 fo the median value == 280, and so on till 282
check$angle = deg2rad(1:nrow(check)) # i'm transforming degree into radians
check$x = check$radius * sin(check$angle) # finding x-value
check$y = check$radius * cos(check$angle)  # fiding y-value

par(mar = c(1,1,1,1))
plot(NA, NA, xlim = c(-5, 5), ylim = c(-5, 5) , xaxt = "n", yaxt = "n", xlab = "", ylab = "") # plots xlim and ylim according to the biggest radius
segments(0, 0, 4.1*sin(check$angle), 4.1*cos(check$angle), lty = 1, col = "grey" ) # to draw every line for every degree 1-360
segments(0, 0, 4.1*sin(check$angle[which(check$BPULDAT_month == "1")]), 4.1*cos(check$angle[which(check$BPULDAT_month == "1")]) )


# to draw a black circles of radius 1, 2, 3, and 4
radius1_x = sin(deg2rad(1:360))
radius1_y = cos(deg2rad(1:360))

radius2_x = 2*sin(deg2rad(1:360))
radius2_y = 2*cos(deg2rad(1:360))

radius3_x = 3*sin(deg2rad(1:360))
radius3_y = 3*cos(deg2rad(1:360))

radius4_x = 4*sin(deg2rad(1:360))
radius4_y = 4*cos(deg2rad(1:360))

  for(i in 1:360){
  segments(radius1_x[i], radius1_y[i], radius1_x[i+1], radius1_y[i+1] )
  }

  for(i in 2:360){
  segments(radius2_x[i], radius2_y[i], radius2_x[i+1], radius2_y[i+1] )
  }

  for(i in 1:360){
  segments(radius3_x[i], radius3_y[i], radius3_x[i+1], radius3_y[i+1] )
  }

  for(i in 1:360){
  segments(radius4_x[i], radius4_y[i], radius4_x[i+1], radius4_y[i+1] )
  }

# to plot the values from dataset
segments(0, 0, check$x, check$y, col  = "red")

points(0, 0, pch = 19, cex = 0.3)

text( 4.3*sin(check$angle[which(check$BPULDAT_month == "1")]), 4.3*cos(check$angle[which(check$BPULDAT_month == "1")]), labels = 1983:2012 )
yr = 1983:2012
yr_lp = yr[is.leapyear(1983:2012)]

text( 4.3*sin(check$angle[which(check$yr_ms %in% paste(yr_lp, "1", sep = "_") ) ]), 4.3*cos(check$angle[which(check$yr_ms %in% paste(yr_lp, "1", sep = "_"))]), labels = yr_lp, col = "red" )

text(0.8*sin(check$angle[which(check$yr_ms == "1998_1")]), 0.8*cos(check$angle[which(check$yr_ms == "1998_1")]), labels = "279")
text(1.8*sin(check$angle[which(check$yr_ms == "1998_1")]), 1.8*cos(check$angle[which(check$yr_ms == "1998_1")]), labels = "280")
text(2.8*sin(check$angle[which(check$yr_ms == "1998_1")]), 2.8*cos(check$angle[which(check$yr_ms == "1998_1")]), labels = "281")
text(3.8*sin(check$angle[which(check$yr_ms == "1998_1")]), 3.8*cos(check$angle[which(check$yr_ms == "1998_1")]), labels = "282")



# extras: standard plot
check1 = check %>% filter(BPULDAT_yr %in% 1996:2001)

plot(NA, NA, xlim = c(0, nrow(check1)), ylim = c(279, 280) , xaxt = "n", yaxt = "n", xlab = "", ylab = "")

x11 = which(check1$BPULDAT_month == 1)
x21 = which(check1$BPULDAT_month == 3)

x12 = which(check1$BPULDAT_month == 7)
x22 = which(check1$BPULDAT_month == 9)

for(i in 1:(length(x11)) ){
  rect(x11[i], 279, x21[i], 280, col = "light grey", xaxt = "n", yaxt = "n", border = "light grey")
}

for(i in 1:(length(x11)) ){
  rect(x12[i], 279, x22[i], 280, col = "light grey", xaxt = "n", yaxt = "n", border = "light grey")
}

segments( 1:nrow(check1), 279, 1:nrow(check1), 280, lty = 2, col = "grey")

points(1:nrow(check1), check1$md_add, pch = 19, xaxt = "n", yaxt = "n", xlab = "", ylab = "", cex = 2) # use estimated birth date instead smdat, do for days, xlab = months, contains 2 leaps years

axis(side = 1, at = c(1, which( (check1$BPULDAT_month %in% c(3,6,9,12) ))), labels = c(1, rep(c(3,6,9,12), 6)), cex.axis = 2 )
axis(side = 2, las = 2, at = c(279, 280), cex.axis = 2)


##### leap-year effect - counties, for the Figure S1 -----

mfr$exp_ga_lmp  = ymd(mfr$BPSMDAT) - ymd(mfr$SMDAT)

check = mfr %>% group_by(AR, lan_text) %>% summarise(median_exp_ga_lmp = median(exp_ga_lmp, na.rm = T))

par(mfrow = c(3,3))
sjuk = unique(mfr$lan_text)

for(i in 1:length(sjuk)){ # checking added value to the lmp date acrross the years in different counties
  sj = sjuk[i]
  plot(check$AR[which(check$lan_text == sj )], check$median_exp_ga_lmp[which(check$lan_text == sj )],
       main = paste(sj), xlab = "", ylab = "",
       pch = 19) 
}
@

<< some extras: neonatal death - graphs >>=

dt1 = dt %>% filter(neo_death == 1)

par(mar = c(5,4,2,1))
boxplot(GRDBS ~ AR, data = dt1, yaxt = "n", notch  = F, outline = T)
axis(side = 2, las = 2)
axis(side = 1, at = seq(1980, 2012, by = 10), labels = seq(1980, 2012, by = 10))

n = c()
pl = c()
pl_low = c()
yrs = 1973:2012
for(i in 1:length(1973:2012)){
  yr = yrs[i]
  dt2 = dt1 %>% filter(AR == yr)
 n = c(n, boxplot.stats(dt2$GRDBS)$n)
pl = c(pl,  boxplot.stats(dt2$GRDBS)$stats[5])
pl_low = c(pl_low, boxplot.stats(dt2$GRDBS)$stats[1])
}

mtext(xpd = T, side = 3, line = 0.5, text = paste(n, "|", sep = ""), cex = 1, at = 1:40)
mtext(xpd = T, side = 3, line = 0.5, text = "n = ", cex = 1, at = 0.1)

text(x = 1:length(yrs), y = pl_low - 2.5, labels = pl_low, cex = 0.5)
text(x = 1:length(yrs), y = pl + 3, labels = pl, cex = 0.5)

# what % of births at given GA window died in each year?
dt$GRDBS_cat = cut(dt$GRDBS, breaks = c(150, 200, 220, 250, 280, 330), labels = 1:5)
table(dt$GRDBS_cat)
check = dt %>% group_by(AR, GRDBS_cat) %>% summarise(pr_neodeath = sum(neo_death==1)/n()*100,
                                                     pr_stillb = sum(stillborn == 1) /n()*100
                                                     )

cl = c("black", "pink", "green", "blue", "brown")
par(mar = c(4,4,2,1))
plot(NA, NA, xlim = c(1973, 2012), ylim = c(0, 30), yaxt = "n", xlab = "", ylab = "", cex.axis = 2)
axis(side = 2, las = 2, cex.axis = 2)
segments(1973, seq(0,30, by = 5), 2012, seq(0, 30, by = 5), col = "grey", lty = 2)
segments(1973:2012, 0, 1973:2012, 30, col = "grey", lty = 2)
for(i in 1:5){
  points(check$AR[which(check$GRDBS_cat==i)], check$pr_neodeath[which(check$GRDBS_cat==i)], type = "b", col = cl[i], lwd = 2 )
}
legend(x= 1973, y = 34, legend = c("150-200", "200-220", "220-250", "250-280", "280-330"), col = cl, pch = 1, lwd = 2, xpd = T, bty = "n", ncol = 5, text.width = rep(8, 5))

# and now who werent born alive - stillborn
par(mar = c(1,4,1,1))
plot(NA, NA, xlim = c(1973, 2012), ylim = c(0, 45), yaxt = "n", xaxt = "n", xlab = "", ylab = "")
axis(side = 2, las = 2, cex.axis = 2)
segments(1973, seq(0,45, by = 5), 2012, seq(0, 45, by = 5), col = "grey", lty = 2)
segments(1973:2012, 0, 1973:2012, 45, col = "grey", lty = 2)
for(i in 1:5){
  points(check$AR[which(check$GRDBS_cat==i)], check$pr_stillb[which(check$GRDBS_cat==i)], type = "b", col = cl[i], lwd = 2 )
}
# legend(x= 1990, y = 0.5, ncol = 2, legend = c("150-200", "200-220", "220-250", "250-280", "280-330"), col = cl, pch = 1, lwd = 2)

@

\end{document}